@model IEnumerable<NotesMarketplace.ViewModels.DownloadedNotesViewModel>

@{
    ViewBag.Title = "Downloaded Notes";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<section class="blank">
</section>

<!-- Section Downloaded Notes -->
<section id="downloaded-notes">

    <div class="content-box">

        <div class="container">

            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-12 table-heading my-auto">
                    <h4 class="heading-md">Downloaded Notes</h4>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-7 col-md-6 col-sm-12 col-12 filter-table-text">
                    <div class="row">
                        <div class="col-lg-3 col-md-4 col-sm-4 col-4">
                            <p>note</p>
                        </div>
                        <div class="col-lg-3 col-md-4 col-sm-4 col-4">
                            <p>seller</p>
                        </div>
                        <div class="col-lg-3 col-md-4 col-sm-4 col-4">
                            <p>buyer</p>
                        </div>
                    </div>
                </div>
            </div>

            @using (Html.BeginForm("DownloadedNotes", "AdminNotes", FormMethod.Get))
            {
                <input value="@ViewBag.NoteID" name="noteid" hidden>
                <input value="@ViewBag.Member" name="member" hidden>

                <div class="row">
                    <div class="col-lg-7 col-md-6 col-sm-12 col-12 text-left filter-table-row">
                        <div class="row">
                            <div class="form-group col-lg-3 col-md-4 col-sm-4 col-4 filter-table">
                                @Html.DropDownList("note", new SelectList(@ViewBag.NoteList, "Value", "Text", @ViewBag.Note), "Select note", new { @class = "form-control", id = "downloadednotes-note" })
                            </div>
                            <div class="form-group col-lg-3 col-md-4 col-sm-4 col-4 filter-table">
                                @Html.DropDownList("seller", new SelectList(@ViewBag.SellerList, "Value", "Text", @ViewBag.Seller), "Select seller", new { @class = "form-control", id = "downloadednotes-seller" })
                            </div>
                            <div class="form-group col-lg-3 col-md-4 col-sm-4 col-4 filter-table">
                                @Html.DropDownList("buyer", new SelectList(@ViewBag.BuyerList, "Value", "Text", @ViewBag.Buyer), "Select buyer", new { @class = "form-control", id = "downloadednotes-buyer" })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-5 col-md-6 col-sm-12 col-12" id="table-search">
                        <div class="row search">
                            <div class="search-bar col-lg-9 col-md-8 col-sm-9 col-8 form-group">
                                <input type="search" class="form-control" name="search" value="@ViewBag.Search" id="search" placeholder="Search">
                            </div>
                            <div class="col-lg-3 col-md-4 col-sm-3 col-4 btn-search">
                                <button class="btn btn-color" type="submit">Search</button>
                            </div>
                        </div>
                    </div>
                </div>

            }

            <div class="row table-general table-responsive">

                <table class="table">
                    <thead>
                        <tr>
                            <th>Sr No.</th>
                            <th>@Html.ActionLink("Note Title", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Title_Desc" : (ViewBag.Sort == "Title_Asc" ? "Title_Desc" : "Title_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })</th>
                            <th>@Html.ActionLink("Category", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Category_Desc" : (ViewBag.Sort == "Category_Asc" ? "Category_Desc" : "Category_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })</th>
                            <th>@Html.ActionLink("Buyer", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Buyer_Desc" : (ViewBag.Sort == "Buyer_Asc" ? "Buyer_Desc" : "Buyer_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })</th>
                            <th class="user-info-eye-column"></th>
                            <th>@Html.ActionLink("Seller", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Seller_Desc" : (ViewBag.Sort == "Seller_Asc" ? "Seller_Desc" : "Seller_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })</th>
                            <th class="user-info-eye-column"></th>
                            <th>@Html.ActionLink("Sell Type", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "SellType_Desc" : (ViewBag.Sort == "SellType_Asc" ? "SellType_Desc" : "SellType_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })</th>
                            <th>@Html.ActionLink("Price", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "Price_Desc" : (ViewBag.Sort == "Price_Asc" ? "Price_Desc" : "Price_Asc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })</th>
                            <th class="content-center">@Html.ActionLink("Downloaded Date/Time", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort == null ? "DownloadedDate_Asc" : (ViewBag.Sort == "DownloadedDate_Desc" ? "DownloadedDate_Asc" : "DownloadedDate_Desc"), search = ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })</th>
                            <th class="content-center"></th>
                        </tr>
                    </thead>
                    <tbody>

                        @if (Model.Count() == 0)
                        {
                            <tr class="no-record">
                                <td colspan="11" class="text-center">No Record Found</td>
                            </tr>
                        }
                        else
                        {
                            var srno = (ViewBag.PageNumber - 1) * 5;
                            foreach (var item in Model)
                            {

                                <tr>
                                    @{ srno = srno + 1; }
                                    <td class="table-sr-no">@srno</td>
                                    <td class="table-notes-title"><a href="@Url.Action("NoteDetail", "Admin", new { noteid = @item.NoteID })">@item.Title</a></td>
                                    <td>@item.Category</td>
                                    <td class="user-info-eye-link">
                                        @item.Buyer
                                    </td>
                                    <td class="user-info-eye-icon">
                                        <a href="@Url.Action("MemberDetail", "AdminMembers", new { member = @item.BuyerID })"><img src="~/images/Dashboard/eye.png" class="eye"></a>
                                    </td>
                                    <td class="user-info-eye-link">
                                        @item.Seller
                                    </td>
                                    <td class="user-info-eye-icon">
                                        <a href="@Url.Action("MemberDetail", "AdminMembers", new { member = @item.SellerID })"><img src="~/images/Dashboard/eye.png" class="eye"></a>
                                    </td>
                                    <td>@item.SellType</td>
                                    <td>$@item.Price</td>
                                    <td class="content-center">@item.DownloadedDate.ToString("dd-MM-yyyy, hh:mm")</td>
                                    <td class="content-center">
                                        <!-- Default dropleft button -->
                                        <div class="btn-group dropleft">
                                            <button type="button" id="dropdownMenu2" class="btn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <img src="~/images/Dashboard/3dot.png" alt="menu" class="dots">
                                            </button>
                                            <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                                                <a class="dropdown-item" href="@Url.Action("AdminDownloadNote", "Admin", new { noteid = @item.NoteID })" role="button">Download Note</a>
                                                <a class="dropdown-item" href="@Url.Action("NoteDetail", "Admin", new { noteid = @item.NoteID })" role="button">View More Details</a>
                                            </div>
                                        </div>
                                    </td>
                                </tr>

                            }
                        }

                    </tbody>
                </table>

            </div>

            @if (Model.Count() != 0)
            {
                <div class="row justify-content-center">

                    <nav aria-label="...">
                        <ul class="pagination flex-wrap">

                            <li class="page-item">
                                @if (ViewBag.PageNumber == 1)
                                {
                                    <a class="page-link" href="@Url.Action("DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = ViewBag.PageNumber })"><i class="fa fa-angle-left"></i></a>
                                }
                                else
                                {
                                    <a class="page-link" href="@Url.Action("DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = @ViewBag.PageNumber - 1 })"><i class="fa fa-angle-left"></i></a>
                                }
                            </li>

                            @{
                                double? TotalPages = ViewBag.TotalPages;

                                if (ViewBag.PageNumber != 1 && ViewBag.PageNumber - 2 > 1)
                                {
                                    int page = Convert.ToInt32(@ViewBag.PageNumber) - 3;
                                    <li class="page-item">@Html.ActionLink("1", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = @ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = 1 }, new { @class = "page-link" })</li>
                                    if (page != 1)
                                    {
                                        <li class="page-item more-pages-dots">@Html.ActionLink("...", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = @ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = page }, new { @class = "page-link more-pages-dots" })</li>
                                    }
                                }

                                for (int i = 2; i > 0; i--)
                                {
                                    if (ViewBag.PageNumber - i > 0)
                                    {
                                        int page = Convert.ToInt32(@ViewBag.PageNumber) - i;
                                        <li class="page-item">@Html.ActionLink(page.ToString(), "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = @ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = page }, new { @class = "page-link" })</li>
                                    }
                                }

                                <li class="page-item active">
                                    <a class="page-link">@ViewBag.PageNumber<span class="sr-only">(current)</span></a>
                                </li>

                                for (int i = 1; i < 3; i++)
                                {
                                    if (ViewBag.PageNumber + i <= TotalPages)
                                    {
                                        int page = Convert.ToInt32(@ViewBag.PageNumber) + i;
                                        <li class="page-item">@Html.ActionLink(page.ToString(), "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = @ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = page }, new { @class = "page-link" })</li>
                                    }
                                }

                                if (ViewBag.PageNumber != TotalPages && ViewBag.PageNumber + 2 < TotalPages)
                                {
                                    int page = Convert.ToInt32(@ViewBag.PageNumber) + 3;
                                    if (page != TotalPages)
                                    {
                                        <li class="page-item">@Html.ActionLink("...", "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = @ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = page }, new { @class = "page-link more-pages-dots" })</li>
                                    }
                                    <li class="page-item">@Html.ActionLink(TotalPages.ToString(), "DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = @ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = TotalPages }, new { @class = "page-link" })</li>
                                }

                            }

                            <li class="page-item">
                                @if (ViewBag.PageNumber == ViewBag.TotalPages)
                                {
                                    <a class="page-link" href="@Url.Action("DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = @ViewBag.PageNumber })"><i class="fa fa-angle-right"></i></a>
                                }
                                else
                                {
                                    <a class="page-link" href="@Url.Action("DownloadedNotes", new { selectednote = ViewBag.SelectedNote, member = ViewBag.Member, note = ViewBag.Note, sort = ViewBag.Sort, search = @ViewBag.Search, seller = ViewBag.Seller, buyer = ViewBag.Buyer, page = @ViewBag.PageNumber + 1 })"><i class="fa fa-angle-right"></i></a>
                                }
                            </li>

                        </ul>
                    </nav>

                </div>
            }

        </div>

    </div>

</section>
<!-- Section Downloaded Notes END -->
